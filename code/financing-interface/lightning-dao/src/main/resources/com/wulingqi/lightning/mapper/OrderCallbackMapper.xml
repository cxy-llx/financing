<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wulingqi.lightning.mapper.OrderCallbackMapper">
  <resultMap id="BaseResultMap" type="com.wulingqi.lightning.model.OrderCallback">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="callback_time" jdbcType="TIMESTAMP" property="callbackTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from br_order_callback
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wulingqi.lightning.model.OrderCallback">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into br_order_callback (order_id, order_no, content, 
      url, count, remark, 
      callback_time, create_time)
    values (#{orderId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{callbackTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.wulingqi.lightning.model.OrderCallback">
    update br_order_callback
    set order_id = #{orderId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      callback_time = #{callbackTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, order_id, order_no, content, url, count, remark, callback_time, create_time
    from br_order_callback
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, order_id, order_no, content, url, count, remark, callback_time, create_time
    from br_order_callback
  </select>
</mapper>